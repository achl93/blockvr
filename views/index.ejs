<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Home Page</title>

    <link rel="stylesheet" href="/vendor/normalize-4.1.1.css" type="text/css" />
    <link rel="stylesheet" href="/vendor/border-box.css" type="text/css" />
    <link rel="stylesheet" href="/styles/layout.css" type="text/css" />
    <script src="https://aframe.io/releases/0.7.0/aframe.min.js"></script>
    <script src="https://unpkg.com/aframe-animation-component@4.0.0-beta8/dist/aframe-animation-component.min.js"></script>
    <script type="text/javascript" src="/vendor/jquery-3.0.0.js"></script>
    <script type="text/javascript">
        // `display-info-panel` makes `block-info-panel`s visible.
        // https://blog.neondaylight.com/build-a-simple-web-vr-ui-with-a-frame-a17a2d5b484
        AFRAME.registerComponent('handle-events', {
            schema: { default: '' },
            init() {
                const blockId = '#block-' + this.data;
                const panelId = '#block-info-panel-' + this.data;
                const textId = '#block-info-text-' + this.data;

                var panel = document.querySelector(panelId);
                var text = document.querySelector(textId);

                this.el.addEventListener('click', () => {
                    // Display info panel above the clicked block.
                    panel.setAttribute('visible', true);
                    text.setAttribute('visible', true);

                    // Move `user-camera` in front of the clicked block.
                    // http://ottifox.com/prototype/2017/09/25/interactive-image-grid-in-webvr.html
                    var camera = document.querySelector('#user-camera');
                    const cameraPosition = camera.getAttribute('position');
                    const blockPosition = this.el.getAttribute('position');

                    if (cameraPosition.x !== blockPosition.x) {
                        // Only move `user-camera` if a different block is clicked.
                        camera.setAttribute('animation', {
                            to: { x: blockPosition.x, y: 2, z: 1.5 },
                        });

                        // Dispatch the event the animation is listening for.
                        var event = new Event('blockClicked');
                        camera.dispatchEvent(event);
                    }
                });

                this.el.addEventListener('mouseleave', () => {
                    // Remove the info panel once the cursor leaves the clicked block.
                    panel.setAttribute('visible', false);
                    text.setAttribute('visible', false);
                });
            }
        });

        // Open a WebSocket to listen for new blocks being created.
        const wsUri = 'wss://ws.blockchain.info/inv';
        const ws = new WebSocket(wsUri);
        if (ws) {
            ws.addEventListener('open', () => {
                // ws.send('{"op":"ping"}');
                ws.send('{"op":"blocks_sub"}');
            });

            ws.addEventListener('message', (data) => {
                onMessage(data);
                // res.render("index", { blocks: hashNames });
            });
        }

        // Add a new block on each WebSocket message.
        var position = 5;
        function onMessage(data) {
            console.log(data);

            const jsonObj = JSON.parse(data.data);
            const hash = jsonObj.x.hash + '\n';

            let dateTime = new Date(0);
            dateTime.setUTCSeconds(jsonObj.x.time);
            const date = dateTime.toLocaleDateString() + ' ' + dateTime.toLocaleTimeString() + '\n';

            position++;

            $('#canvas').append(`<a-box handle-events="${position}"
                        position="${-6 + position * 2} 1.25 -5"
                        rotation="0 0 0"
                        color="#4CC3D9"
                        width="1"
                        data-blockNo="${position}"
                        class="block"></a-box>

                        <a-entity id="block-info-panel-${position}"
                        geometry="primitive: plane; height: 1; width: 5"
                        material="shader: flat; color: pink"
                        position="${-6 + position * 2} 3.25 -4"
                        visible="false"></a-entity>

                        <a-text id="block-info-text-${position}"
                        value="Hash: ${hash} Time Created: ${date}"
                        position="${-8.5 + position * 2} 3.25 -4"
                        visible="false"></a-text>

                        <a-entity line="start: ${-6.5 + position * 2} 1.25 -5; end: ${-7.5 + position * 2} 1.25 -5; color: #ff0"></a-entity>`);
        }
    </script>
    <style>
        div {
            width:100px;
        }
    </style>
  </head>

  <body>
    <h1>Block VR!</h1>
    <div>
    <a-scene id="canvas">
        <!-- Cursor -->
        <a-entity id="user-camera"
                position="0 2 1.5"
                animation="property: position; easing: easeOutCubic; startEvents: blockClicked; dur: 1300">
            <a-entity camera look-controls>
                <!-- Anything attached here will stay in the view like a HUD. -->
                <a-entity position="0 0 -5"
                        geometry="primitive: ring; radiusOuter: 0.30; radiusInner: 0.20;"
                        material="color: grey; shader: flat"
                        cursor="fuse: true;">
                    <!-- The click events lag sometimes. -->
                    <a-animation begin="click"
                            easing="ease-in"
                            attribute="scale"
                            fill="forwards"
                            from="0.1 0.1 0.1"
                            to="1 1 1"
                            dur="150"></a-animation>
                    <a-animation begin="fusing"
                            easing="ease-in"
                            attribute="scale"
                            fill="forwards"
                            from="1 1 1"
                            to="0.1 0.1 0.1"
                            dur="1500"></a-animation>
                </a-entity>
            </a-entity>
        </a-entity>

        <!-- From left to right: least recent to most recent. -->
        <% for (let i = 0; i < blocks.length; i++) { %>
          <% if (i == blocks.length) { %>
            <!-- Block. -->
            <a-box id="block-<%= i %>"
                    handle-events="<%= i %>"
                    position="<%= 4 - i * 2 %> 1.25 -5"
                    rotation="0 0 0"
                    color="#4CC3D9"
                    width="1"
                    data-blockNo="<%= i %>"
                    class="block"></a-box>

            <!-- Info panel that hovers above each block. -->
            <a-entity id="block-info-panel-<%= i %>"
                    geometry="primitive: plane; height: 1; width: 5"
                    material="shader: flat; color: pink"
                    position="<%= 4 - i * 2 %> 3.25 -4"
                    visible="false"></a-entity>

            <!-- Text that goes on each panel. -->
            <a-text id="block-info-text-<%= i %>"
                    value="<%= blocks[i] %>"
                    position="<%= 1.5 - i * 2 %> 3.25 -4"
                    visible="false"></a-text>
          <% } else { %>
            <!-- Block. -->
            <a-box id="block-<%= i %>"
                    handle-events="<%= i %>"
                    position="<%= 4 - i * 2 %> 1.25 -5"
                    rotation="0 0 0"
                    color="#4CC3D9"
                    width="1"
                    data-blockNo="<%= i %>"
                    class="block"></a-box>

            <!-- Info panel that hovers above each block. -->
            <!-- TODO: Make these unclickable. -->
            <a-entity id="block-info-panel-<%= i %>"
                    geometry="primitive: plane; height: 1; width: 5"
                    material="shader: flat; color: pink"
                    position="<%= 4 - i * 2 %> 3.25 -4"
                    visible="false"></a-entity>

            <!-- Text that goes on each panel. -->
            <a-text id="block-info-text-<%= i %>"
                    value="<%= blocks[i] %>"
                    position="<%= 1.5 - i * 2 %> 3.25 -4"
                    visible="false"></a-text>

            <!-- Line that runs through each block -->
            <a-entity line="start: <%= 3.5 - i * 2 %> 1.25 -5; end: <%= -3.5 + i * 2 %> 1.25 -5; color: #ff0"></a-entity>
          <% } %>
        <% } %>
    </a-scene>
    </div>
  </body>
</html>
